import java.util.regex.Pattern

plugins {
    id 'groovy'
    id 'application'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.8'

    implementation('org.mnode.ical4j:ical4j:3.0.7') {
        transitive = true
    }

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

application {
    mainClassName = 'com.salsapop.cli.Entry'
}

ext {
    defaultCalendar = "salsapop.ics"
    htmlOutputRoot = "/tmp/salsapop_html"
}

task cleanOutput {
    doLast {
        println "Purging ${htmlOutputRoot}..."
        delete file(htmlOutputRoot)
        println "Creating ${htmlOutputRoot}..."
        mkdir file(htmlOutputRoot)
    }
}

task copyStylesAndImages {
    doLast {
        println "Copying styles and images to ${htmlOutputRoot}"
        copy {
            from "prototype"
            into htmlOutputRoot
            exclude "**/*.html"
        }
    }
}

task generateIndexOnly(type: JavaExec) {
    doLast {
        classpath = sourceSets.main.runtimeClasspath
        main = application.mainClassName
        args "-r", defaultCalendar, "-o", htmlOutputRoot, "-i"
    }
}

task generateAll(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = application.mainClassName
    doFirst {
        println "Generating all HTML under ${htmlOutputRoot}"
        args "-r", defaultCalendar, "-o", htmlOutputRoot
    }
}

task generateSitemap(dependsOn: generateAll) {
    doLast {
        println "Generating sitemap under ${htmlOutputRoot}"
        def f = file(htmlOutputRoot)
        def o = file("${htmlOutputRoot}/sitemap.txt")
        o.withWriter { w ->
            f.eachFileRecurse { x ->
                if (x.isFile() && x.getName().endsWith("html")) {
                    def p = Pattern.compile(".+" + htmlOutputRoot)
                    w.println("http://www.salsapop.com" + x.getPath().replaceFirst(p, ""))
                }
            }
        }
    }
}

task fullGenerate {
    copyStylesAndImages.mustRunAfter(cleanOutput)
    generateAll.mustRunAfter(cleanOutput)
    generateSitemap.mustRunAfter(generateAll)
    dependsOn cleanOutput, copyStylesAndImages, generateAll, generateSitemap
    doLast {
        println "Full generation complete!"
    }
}

task fullGenerateForLocal {
    dependsOn fullGenerate
    doFirst {
        htmlOutputRoot = "/var/www/salsapop"
    }
}